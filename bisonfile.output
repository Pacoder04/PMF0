Terminals unused in grammar

   KW_CONTINUE
   DOUBLE
   OCTAL
   HEXADECIMAL
   STRING
   NOT


Grammar

    0 $accept: S $end

    1 S: S stat
    2  | /* empty */

    3 stat: exp T_SC
    4     | IDENTIFIER ASSIGN exp T_SC
    5     | if_stat
    6     | KW_WHILE T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB
    7     | for_stat
    8     | KW_BREAK T_SC
    9     | declaration
   10     | function_def
   11     | function_call
   12     | KW_RETURN exp T_SC
   13     | KW_READ IDENTIFIER T_SC
   14     | KW_WRITE exp T_SC
   15     | KW_SKIP T_SC

   16 exp: term
   17    | exp PLUS term
   18    | exp MINUS term

   19 term: factor
   20     | term MULTIPLY factor
   21     | term DIVIDE factor

   22 factor: T_LEFTP exp T_RIGHTP
   23       | INTEGER
   24       | IDENTIFIER
   25       | T_TRUE

   26 declaration: type IDENTIFIER ASSIGN exp T_SC

   27 type: KW_INT
   28     | KW_DOUBLE
   29     | KW_BOOL
   30     | KW_STRING

   31 function_def: type IDENTIFIER T_LEFTP params T_RIGHTP T_LEFTB S T_RIGHTB

   32 params: param
   33       | params T_COMMA param

   34 param: type IDENTIFIER

   35 function_call: IDENTIFIER T_LEFTP args T_RIGHTP T_SC

   36 args: exp
   37     | args T_COMMA exp

   38 for_stat: KW_FOR T_LEFTP type IDENTIFIER ASSIGN exp T_SC condition T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB
   39         | KW_FOR T_LEFTP assignment T_SC condition T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB

   40 assignment: IDENTIFIER ASSIGN exp

   41 if_stat: matched_stat
   42        | unmatched_stat

   43 matched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE T_LEFTB S T_RIGHTB

   44 unmatched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB
   45               | KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE unmatched_stat

   46 condition: conjunction
   47          | condition OR conjunction

   48 conjunction: comparison
   49            | conjunction AND comparison

   50 comparison: T_TRUE
   51           | T_FALSE
   52           | IDENTIFIER comparison_operator IDENTIFIER

   53 comparison_operator: EQUAL
   54                    | NOT_EQUAL
   55                    | LESS
   56                    | LESS_EQUAL
   57                    | GREATER
   58                    | GREATER_EQUAL


Terminals, with rules where they appear

$end (0) 0
error (256)
KW_IF (258) 43 44 45
KW_ELSE (259) 43 45
KW_WHILE (260) 6
KW_FOR (261) 38 39
KW_BREAK (262) 8
KW_CONTINUE (263)
KW_RETURN (264) 12
DOUBLE (265)
OCTAL (266)
HEXADECIMAL (267)
STRING (268)
EQUAL (269) 53
NOT_EQUAL (270) 54
LESS (271) 55
LESS_EQUAL (272) 56
GREATER (273) 57
GREATER_EQUAL (274) 58
AND (275) 49
OR (276) 47
NOT (277)
INTEGER (278) 23
T_SC (279) 3 4 8 12 13 14 15 26 35 38 39
T_COMMA (280) 33 37
KW_INT (281) 27
KW_DOUBLE (282) 28
KW_BOOL (283) 29
KW_STRING (284) 30
PLUS (285) 17
MINUS (286) 18
MULTIPLY (287) 20
DIVIDE (288) 21
T_LEFTP (289) 6 22 31 35 38 39 43 44 45
T_RIGHTP (290) 6 22 31 35 38 39 43 44 45
T_RIGHTB (291) 6 31 38 39 43 44 45
T_LEFTB (292) 6 31 38 39 43 44 45
IDENTIFIER (293) 4 13 24 26 31 34 35 38 40 52
ASSIGN (294) 4 26 38 40
T_TRUE (295) 25 50
T_FALSE (296) 51
KW_SKIP (297) 15
KW_READ (298) 13
KW_WRITE (299) 14


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
S (46)
    on left: 1 2, on right: 0 1 6 31 38 39 43 44 45
stat (47)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15, on right: 1
exp (48)
    on left: 16 17 18, on right: 3 4 12 14 17 18 22 26 36 37 38 40
term (49)
    on left: 19 20 21, on right: 16 17 18 20 21
factor (50)
    on left: 22 23 24 25, on right: 19 20 21
declaration (51)
    on left: 26, on right: 9
type (52)
    on left: 27 28 29 30, on right: 26 31 34 38
function_def (53)
    on left: 31, on right: 10
params (54)
    on left: 32 33, on right: 31 33
param (55)
    on left: 34, on right: 32 33
function_call (56)
    on left: 35, on right: 11
args (57)
    on left: 36 37, on right: 35 37
for_stat (58)
    on left: 38 39, on right: 7
assignment (59)
    on left: 40, on right: 38 39
if_stat (60)
    on left: 41 42, on right: 5
matched_stat (61)
    on left: 43, on right: 41
unmatched_stat (62)
    on left: 44 45, on right: 42 45
condition (63)
    on left: 46 47, on right: 6 38 39 43 44 45 47
conjunction (64)
    on left: 48 49, on right: 46 47 49
comparison (65)
    on left: 50 51 52, on right: 48 49
comparison_operator (66)
    on left: 53 54 55 56 57 58, on right: 52


state 0

    0 $accept: . S $end

    $default  reduce using rule 2 (S)

    S  go to state 1


state 1

    0 $accept: S . $end
    1 S: S . stat

    $end        shift, and go to state 2
    KW_IF       shift, and go to state 3
    KW_WHILE    shift, and go to state 4
    KW_FOR      shift, and go to state 5
    KW_BREAK    shift, and go to state 6
    KW_RETURN   shift, and go to state 7
    INTEGER     shift, and go to state 8
    KW_INT      shift, and go to state 9
    KW_DOUBLE   shift, and go to state 10
    KW_BOOL     shift, and go to state 11
    KW_STRING   shift, and go to state 12
    T_LEFTP     shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    T_TRUE      shift, and go to state 15
    KW_SKIP     shift, and go to state 16
    KW_READ     shift, and go to state 17
    KW_WRITE    shift, and go to state 18

    stat            go to state 19
    exp             go to state 20
    term            go to state 21
    factor          go to state 22
    declaration     go to state 23
    type            go to state 24
    function_def    go to state 25
    function_call   go to state 26
    for_stat        go to state 27
    if_stat         go to state 28
    matched_stat    go to state 29
    unmatched_stat  go to state 30


state 2

    0 $accept: S $end .

    $default  accept


state 3

   43 matched_stat: KW_IF . T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE T_LEFTB S T_RIGHTB
   44 unmatched_stat: KW_IF . T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB
   45               | KW_IF . T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE unmatched_stat

    T_LEFTP  shift, and go to state 31


state 4

    6 stat: KW_WHILE . T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB

    T_LEFTP  shift, and go to state 32


state 5

   38 for_stat: KW_FOR . T_LEFTP type IDENTIFIER ASSIGN exp T_SC condition T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB
   39         | KW_FOR . T_LEFTP assignment T_SC condition T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB

    T_LEFTP  shift, and go to state 33


state 6

    8 stat: KW_BREAK . T_SC

    T_SC  shift, and go to state 34


state 7

   12 stat: KW_RETURN . exp T_SC

    INTEGER     shift, and go to state 8
    T_LEFTP     shift, and go to state 13
    IDENTIFIER  shift, and go to state 35
    T_TRUE      shift, and go to state 15

    exp     go to state 36
    term    go to state 21
    factor  go to state 22


state 8

   23 factor: INTEGER .

    $default  reduce using rule 23 (factor)


state 9

   27 type: KW_INT .

    $default  reduce using rule 27 (type)


state 10

   28 type: KW_DOUBLE .

    $default  reduce using rule 28 (type)


state 11

   29 type: KW_BOOL .

    $default  reduce using rule 29 (type)


state 12

   30 type: KW_STRING .

    $default  reduce using rule 30 (type)


state 13

   22 factor: T_LEFTP . exp T_RIGHTP

    INTEGER     shift, and go to state 8
    T_LEFTP     shift, and go to state 13
    IDENTIFIER  shift, and go to state 35
    T_TRUE      shift, and go to state 15

    exp     go to state 37
    term    go to state 21
    factor  go to state 22


state 14

    4 stat: IDENTIFIER . ASSIGN exp T_SC
   24 factor: IDENTIFIER .
   35 function_call: IDENTIFIER . T_LEFTP args T_RIGHTP T_SC

    T_LEFTP  shift, and go to state 38
    ASSIGN   shift, and go to state 39

    $default  reduce using rule 24 (factor)


state 15

   25 factor: T_TRUE .

    $default  reduce using rule 25 (factor)


state 16

   15 stat: KW_SKIP . T_SC

    T_SC  shift, and go to state 40


state 17

   13 stat: KW_READ . IDENTIFIER T_SC

    IDENTIFIER  shift, and go to state 41


state 18

   14 stat: KW_WRITE . exp T_SC

    INTEGER     shift, and go to state 8
    T_LEFTP     shift, and go to state 13
    IDENTIFIER  shift, and go to state 35
    T_TRUE      shift, and go to state 15

    exp     go to state 42
    term    go to state 21
    factor  go to state 22


state 19

    1 S: S stat .

    $default  reduce using rule 1 (S)


state 20

    3 stat: exp . T_SC
   17 exp: exp . PLUS term
   18    | exp . MINUS term

    T_SC   shift, and go to state 43
    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45


state 21

   16 exp: term .
   20 term: term . MULTIPLY factor
   21     | term . DIVIDE factor

    MULTIPLY  shift, and go to state 46
    DIVIDE    shift, and go to state 47

    $default  reduce using rule 16 (exp)


state 22

   19 term: factor .

    $default  reduce using rule 19 (term)


state 23

    9 stat: declaration .

    $default  reduce using rule 9 (stat)


state 24

   26 declaration: type . IDENTIFIER ASSIGN exp T_SC
   31 function_def: type . IDENTIFIER T_LEFTP params T_RIGHTP T_LEFTB S T_RIGHTB

    IDENTIFIER  shift, and go to state 48


state 25

   10 stat: function_def .

    $default  reduce using rule 10 (stat)


state 26

   11 stat: function_call .

    $default  reduce using rule 11 (stat)


state 27

    7 stat: for_stat .

    $default  reduce using rule 7 (stat)


state 28

    5 stat: if_stat .

    $default  reduce using rule 5 (stat)


state 29

   41 if_stat: matched_stat .

    $default  reduce using rule 41 (if_stat)


state 30

   42 if_stat: unmatched_stat .

    $default  reduce using rule 42 (if_stat)


state 31

   43 matched_stat: KW_IF T_LEFTP . condition T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE T_LEFTB S T_RIGHTB
   44 unmatched_stat: KW_IF T_LEFTP . condition T_RIGHTP T_LEFTB S T_RIGHTB
   45               | KW_IF T_LEFTP . condition T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE unmatched_stat

    IDENTIFIER  shift, and go to state 49
    T_TRUE      shift, and go to state 50
    T_FALSE     shift, and go to state 51

    condition    go to state 52
    conjunction  go to state 53
    comparison   go to state 54


state 32

    6 stat: KW_WHILE T_LEFTP . condition T_RIGHTP T_LEFTB S T_RIGHTB

    IDENTIFIER  shift, and go to state 49
    T_TRUE      shift, and go to state 50
    T_FALSE     shift, and go to state 51

    condition    go to state 55
    conjunction  go to state 53
    comparison   go to state 54


state 33

   38 for_stat: KW_FOR T_LEFTP . type IDENTIFIER ASSIGN exp T_SC condition T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB
   39         | KW_FOR T_LEFTP . assignment T_SC condition T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB

    KW_INT      shift, and go to state 9
    KW_DOUBLE   shift, and go to state 10
    KW_BOOL     shift, and go to state 11
    KW_STRING   shift, and go to state 12
    IDENTIFIER  shift, and go to state 56

    type        go to state 57
    assignment  go to state 58


state 34

    8 stat: KW_BREAK T_SC .

    $default  reduce using rule 8 (stat)


state 35

   24 factor: IDENTIFIER .

    $default  reduce using rule 24 (factor)


state 36

   12 stat: KW_RETURN exp . T_SC
   17 exp: exp . PLUS term
   18    | exp . MINUS term

    T_SC   shift, and go to state 59
    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45


state 37

   17 exp: exp . PLUS term
   18    | exp . MINUS term
   22 factor: T_LEFTP exp . T_RIGHTP

    PLUS      shift, and go to state 44
    MINUS     shift, and go to state 45
    T_RIGHTP  shift, and go to state 60


state 38

   35 function_call: IDENTIFIER T_LEFTP . args T_RIGHTP T_SC

    INTEGER     shift, and go to state 8
    T_LEFTP     shift, and go to state 13
    IDENTIFIER  shift, and go to state 35
    T_TRUE      shift, and go to state 15

    exp     go to state 61
    term    go to state 21
    factor  go to state 22
    args    go to state 62


state 39

    4 stat: IDENTIFIER ASSIGN . exp T_SC

    INTEGER     shift, and go to state 8
    T_LEFTP     shift, and go to state 13
    IDENTIFIER  shift, and go to state 35
    T_TRUE      shift, and go to state 15

    exp     go to state 63
    term    go to state 21
    factor  go to state 22


state 40

   15 stat: KW_SKIP T_SC .

    $default  reduce using rule 15 (stat)


state 41

   13 stat: KW_READ IDENTIFIER . T_SC

    T_SC  shift, and go to state 64


state 42

   14 stat: KW_WRITE exp . T_SC
   17 exp: exp . PLUS term
   18    | exp . MINUS term

    T_SC   shift, and go to state 65
    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45


state 43

    3 stat: exp T_SC .

    $default  reduce using rule 3 (stat)


state 44

   17 exp: exp PLUS . term

    INTEGER     shift, and go to state 8
    T_LEFTP     shift, and go to state 13
    IDENTIFIER  shift, and go to state 35
    T_TRUE      shift, and go to state 15

    term    go to state 66
    factor  go to state 22


state 45

   18 exp: exp MINUS . term

    INTEGER     shift, and go to state 8
    T_LEFTP     shift, and go to state 13
    IDENTIFIER  shift, and go to state 35
    T_TRUE      shift, and go to state 15

    term    go to state 67
    factor  go to state 22


state 46

   20 term: term MULTIPLY . factor

    INTEGER     shift, and go to state 8
    T_LEFTP     shift, and go to state 13
    IDENTIFIER  shift, and go to state 35
    T_TRUE      shift, and go to state 15

    factor  go to state 68


state 47

   21 term: term DIVIDE . factor

    INTEGER     shift, and go to state 8
    T_LEFTP     shift, and go to state 13
    IDENTIFIER  shift, and go to state 35
    T_TRUE      shift, and go to state 15

    factor  go to state 69


state 48

   26 declaration: type IDENTIFIER . ASSIGN exp T_SC
   31 function_def: type IDENTIFIER . T_LEFTP params T_RIGHTP T_LEFTB S T_RIGHTB

    T_LEFTP  shift, and go to state 70
    ASSIGN   shift, and go to state 71


state 49

   52 comparison: IDENTIFIER . comparison_operator IDENTIFIER

    EQUAL          shift, and go to state 72
    NOT_EQUAL      shift, and go to state 73
    LESS           shift, and go to state 74
    LESS_EQUAL     shift, and go to state 75
    GREATER        shift, and go to state 76
    GREATER_EQUAL  shift, and go to state 77

    comparison_operator  go to state 78


state 50

   50 comparison: T_TRUE .

    $default  reduce using rule 50 (comparison)


state 51

   51 comparison: T_FALSE .

    $default  reduce using rule 51 (comparison)


state 52

   43 matched_stat: KW_IF T_LEFTP condition . T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE T_LEFTB S T_RIGHTB
   44 unmatched_stat: KW_IF T_LEFTP condition . T_RIGHTP T_LEFTB S T_RIGHTB
   45               | KW_IF T_LEFTP condition . T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE unmatched_stat
   47 condition: condition . OR conjunction

    OR        shift, and go to state 79
    T_RIGHTP  shift, and go to state 80


state 53

   46 condition: conjunction .
   49 conjunction: conjunction . AND comparison

    AND  shift, and go to state 81

    $default  reduce using rule 46 (condition)


state 54

   48 conjunction: comparison .

    $default  reduce using rule 48 (conjunction)


state 55

    6 stat: KW_WHILE T_LEFTP condition . T_RIGHTP T_LEFTB S T_RIGHTB
   47 condition: condition . OR conjunction

    OR        shift, and go to state 79
    T_RIGHTP  shift, and go to state 82


state 56

   40 assignment: IDENTIFIER . ASSIGN exp

    ASSIGN  shift, and go to state 83


state 57

   38 for_stat: KW_FOR T_LEFTP type . IDENTIFIER ASSIGN exp T_SC condition T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB

    IDENTIFIER  shift, and go to state 84


state 58

   39 for_stat: KW_FOR T_LEFTP assignment . T_SC condition T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB

    T_SC  shift, and go to state 85


state 59

   12 stat: KW_RETURN exp T_SC .

    $default  reduce using rule 12 (stat)


state 60

   22 factor: T_LEFTP exp T_RIGHTP .

    $default  reduce using rule 22 (factor)


state 61

   17 exp: exp . PLUS term
   18    | exp . MINUS term
   36 args: exp .

    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45

    $default  reduce using rule 36 (args)


state 62

   35 function_call: IDENTIFIER T_LEFTP args . T_RIGHTP T_SC
   37 args: args . T_COMMA exp

    T_COMMA   shift, and go to state 86
    T_RIGHTP  shift, and go to state 87


state 63

    4 stat: IDENTIFIER ASSIGN exp . T_SC
   17 exp: exp . PLUS term
   18    | exp . MINUS term

    T_SC   shift, and go to state 88
    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45


state 64

   13 stat: KW_READ IDENTIFIER T_SC .

    $default  reduce using rule 13 (stat)


state 65

   14 stat: KW_WRITE exp T_SC .

    $default  reduce using rule 14 (stat)


state 66

   17 exp: exp PLUS term .
   20 term: term . MULTIPLY factor
   21     | term . DIVIDE factor

    MULTIPLY  shift, and go to state 46
    DIVIDE    shift, and go to state 47

    $default  reduce using rule 17 (exp)


state 67

   18 exp: exp MINUS term .
   20 term: term . MULTIPLY factor
   21     | term . DIVIDE factor

    MULTIPLY  shift, and go to state 46
    DIVIDE    shift, and go to state 47

    $default  reduce using rule 18 (exp)


state 68

   20 term: term MULTIPLY factor .

    $default  reduce using rule 20 (term)


state 69

   21 term: term DIVIDE factor .

    $default  reduce using rule 21 (term)


state 70

   31 function_def: type IDENTIFIER T_LEFTP . params T_RIGHTP T_LEFTB S T_RIGHTB

    KW_INT     shift, and go to state 9
    KW_DOUBLE  shift, and go to state 10
    KW_BOOL    shift, and go to state 11
    KW_STRING  shift, and go to state 12

    type    go to state 89
    params  go to state 90
    param   go to state 91


state 71

   26 declaration: type IDENTIFIER ASSIGN . exp T_SC

    INTEGER     shift, and go to state 8
    T_LEFTP     shift, and go to state 13
    IDENTIFIER  shift, and go to state 35
    T_TRUE      shift, and go to state 15

    exp     go to state 92
    term    go to state 21
    factor  go to state 22


state 72

   53 comparison_operator: EQUAL .

    $default  reduce using rule 53 (comparison_operator)


state 73

   54 comparison_operator: NOT_EQUAL .

    $default  reduce using rule 54 (comparison_operator)


state 74

   55 comparison_operator: LESS .

    $default  reduce using rule 55 (comparison_operator)


state 75

   56 comparison_operator: LESS_EQUAL .

    $default  reduce using rule 56 (comparison_operator)


state 76

   57 comparison_operator: GREATER .

    $default  reduce using rule 57 (comparison_operator)


state 77

   58 comparison_operator: GREATER_EQUAL .

    $default  reduce using rule 58 (comparison_operator)


state 78

   52 comparison: IDENTIFIER comparison_operator . IDENTIFIER

    IDENTIFIER  shift, and go to state 93


state 79

   47 condition: condition OR . conjunction

    IDENTIFIER  shift, and go to state 49
    T_TRUE      shift, and go to state 50
    T_FALSE     shift, and go to state 51

    conjunction  go to state 94
    comparison   go to state 54


state 80

   43 matched_stat: KW_IF T_LEFTP condition T_RIGHTP . T_LEFTB S T_RIGHTB KW_ELSE T_LEFTB S T_RIGHTB
   44 unmatched_stat: KW_IF T_LEFTP condition T_RIGHTP . T_LEFTB S T_RIGHTB
   45               | KW_IF T_LEFTP condition T_RIGHTP . T_LEFTB S T_RIGHTB KW_ELSE unmatched_stat

    T_LEFTB  shift, and go to state 95


state 81

   49 conjunction: conjunction AND . comparison

    IDENTIFIER  shift, and go to state 49
    T_TRUE      shift, and go to state 50
    T_FALSE     shift, and go to state 51

    comparison  go to state 96


state 82

    6 stat: KW_WHILE T_LEFTP condition T_RIGHTP . T_LEFTB S T_RIGHTB

    T_LEFTB  shift, and go to state 97


state 83

   40 assignment: IDENTIFIER ASSIGN . exp

    INTEGER     shift, and go to state 8
    T_LEFTP     shift, and go to state 13
    IDENTIFIER  shift, and go to state 35
    T_TRUE      shift, and go to state 15

    exp     go to state 98
    term    go to state 21
    factor  go to state 22


state 84

   38 for_stat: KW_FOR T_LEFTP type IDENTIFIER . ASSIGN exp T_SC condition T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB

    ASSIGN  shift, and go to state 99


state 85

   39 for_stat: KW_FOR T_LEFTP assignment T_SC . condition T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB

    IDENTIFIER  shift, and go to state 49
    T_TRUE      shift, and go to state 50
    T_FALSE     shift, and go to state 51

    condition    go to state 100
    conjunction  go to state 53
    comparison   go to state 54


state 86

   37 args: args T_COMMA . exp

    INTEGER     shift, and go to state 8
    T_LEFTP     shift, and go to state 13
    IDENTIFIER  shift, and go to state 35
    T_TRUE      shift, and go to state 15

    exp     go to state 101
    term    go to state 21
    factor  go to state 22


state 87

   35 function_call: IDENTIFIER T_LEFTP args T_RIGHTP . T_SC

    T_SC  shift, and go to state 102


state 88

    4 stat: IDENTIFIER ASSIGN exp T_SC .

    $default  reduce using rule 4 (stat)


state 89

   34 param: type . IDENTIFIER

    IDENTIFIER  shift, and go to state 103


state 90

   31 function_def: type IDENTIFIER T_LEFTP params . T_RIGHTP T_LEFTB S T_RIGHTB
   33 params: params . T_COMMA param

    T_COMMA   shift, and go to state 104
    T_RIGHTP  shift, and go to state 105


state 91

   32 params: param .

    $default  reduce using rule 32 (params)


state 92

   17 exp: exp . PLUS term
   18    | exp . MINUS term
   26 declaration: type IDENTIFIER ASSIGN exp . T_SC

    T_SC   shift, and go to state 106
    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45


state 93

   52 comparison: IDENTIFIER comparison_operator IDENTIFIER .

    $default  reduce using rule 52 (comparison)


state 94

   47 condition: condition OR conjunction .
   49 conjunction: conjunction . AND comparison

    AND  shift, and go to state 81

    $default  reduce using rule 47 (condition)


state 95

   43 matched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB . S T_RIGHTB KW_ELSE T_LEFTB S T_RIGHTB
   44 unmatched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB . S T_RIGHTB
   45               | KW_IF T_LEFTP condition T_RIGHTP T_LEFTB . S T_RIGHTB KW_ELSE unmatched_stat

    $default  reduce using rule 2 (S)

    S  go to state 107


state 96

   49 conjunction: conjunction AND comparison .

    $default  reduce using rule 49 (conjunction)


state 97

    6 stat: KW_WHILE T_LEFTP condition T_RIGHTP T_LEFTB . S T_RIGHTB

    $default  reduce using rule 2 (S)

    S  go to state 108


state 98

   17 exp: exp . PLUS term
   18    | exp . MINUS term
   40 assignment: IDENTIFIER ASSIGN exp .

    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45

    $default  reduce using rule 40 (assignment)


state 99

   38 for_stat: KW_FOR T_LEFTP type IDENTIFIER ASSIGN . exp T_SC condition T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB

    INTEGER     shift, and go to state 8
    T_LEFTP     shift, and go to state 13
    IDENTIFIER  shift, and go to state 35
    T_TRUE      shift, and go to state 15

    exp     go to state 109
    term    go to state 21
    factor  go to state 22


state 100

   39 for_stat: KW_FOR T_LEFTP assignment T_SC condition . T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB
   47 condition: condition . OR conjunction

    OR    shift, and go to state 79
    T_SC  shift, and go to state 110


state 101

   17 exp: exp . PLUS term
   18    | exp . MINUS term
   37 args: args T_COMMA exp .

    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45

    $default  reduce using rule 37 (args)


state 102

   35 function_call: IDENTIFIER T_LEFTP args T_RIGHTP T_SC .

    $default  reduce using rule 35 (function_call)


state 103

   34 param: type IDENTIFIER .

    $default  reduce using rule 34 (param)


state 104

   33 params: params T_COMMA . param

    KW_INT     shift, and go to state 9
    KW_DOUBLE  shift, and go to state 10
    KW_BOOL    shift, and go to state 11
    KW_STRING  shift, and go to state 12

    type   go to state 89
    param  go to state 111


state 105

   31 function_def: type IDENTIFIER T_LEFTP params T_RIGHTP . T_LEFTB S T_RIGHTB

    T_LEFTB  shift, and go to state 112


state 106

   26 declaration: type IDENTIFIER ASSIGN exp T_SC .

    $default  reduce using rule 26 (declaration)


state 107

    1 S: S . stat
   43 matched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S . T_RIGHTB KW_ELSE T_LEFTB S T_RIGHTB
   44 unmatched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S . T_RIGHTB
   45               | KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S . T_RIGHTB KW_ELSE unmatched_stat

    KW_IF       shift, and go to state 3
    KW_WHILE    shift, and go to state 4
    KW_FOR      shift, and go to state 5
    KW_BREAK    shift, and go to state 6
    KW_RETURN   shift, and go to state 7
    INTEGER     shift, and go to state 8
    KW_INT      shift, and go to state 9
    KW_DOUBLE   shift, and go to state 10
    KW_BOOL     shift, and go to state 11
    KW_STRING   shift, and go to state 12
    T_LEFTP     shift, and go to state 13
    T_RIGHTB    shift, and go to state 113
    IDENTIFIER  shift, and go to state 14
    T_TRUE      shift, and go to state 15
    KW_SKIP     shift, and go to state 16
    KW_READ     shift, and go to state 17
    KW_WRITE    shift, and go to state 18

    stat            go to state 19
    exp             go to state 20
    term            go to state 21
    factor          go to state 22
    declaration     go to state 23
    type            go to state 24
    function_def    go to state 25
    function_call   go to state 26
    for_stat        go to state 27
    if_stat         go to state 28
    matched_stat    go to state 29
    unmatched_stat  go to state 30


state 108

    1 S: S . stat
    6 stat: KW_WHILE T_LEFTP condition T_RIGHTP T_LEFTB S . T_RIGHTB

    KW_IF       shift, and go to state 3
    KW_WHILE    shift, and go to state 4
    KW_FOR      shift, and go to state 5
    KW_BREAK    shift, and go to state 6
    KW_RETURN   shift, and go to state 7
    INTEGER     shift, and go to state 8
    KW_INT      shift, and go to state 9
    KW_DOUBLE   shift, and go to state 10
    KW_BOOL     shift, and go to state 11
    KW_STRING   shift, and go to state 12
    T_LEFTP     shift, and go to state 13
    T_RIGHTB    shift, and go to state 114
    IDENTIFIER  shift, and go to state 14
    T_TRUE      shift, and go to state 15
    KW_SKIP     shift, and go to state 16
    KW_READ     shift, and go to state 17
    KW_WRITE    shift, and go to state 18

    stat            go to state 19
    exp             go to state 20
    term            go to state 21
    factor          go to state 22
    declaration     go to state 23
    type            go to state 24
    function_def    go to state 25
    function_call   go to state 26
    for_stat        go to state 27
    if_stat         go to state 28
    matched_stat    go to state 29
    unmatched_stat  go to state 30


state 109

   17 exp: exp . PLUS term
   18    | exp . MINUS term
   38 for_stat: KW_FOR T_LEFTP type IDENTIFIER ASSIGN exp . T_SC condition T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB

    T_SC   shift, and go to state 115
    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45


state 110

   39 for_stat: KW_FOR T_LEFTP assignment T_SC condition T_SC . assignment T_RIGHTP T_LEFTB S T_RIGHTB

    IDENTIFIER  shift, and go to state 56

    assignment  go to state 116


state 111

   33 params: params T_COMMA param .

    $default  reduce using rule 33 (params)


state 112

   31 function_def: type IDENTIFIER T_LEFTP params T_RIGHTP T_LEFTB . S T_RIGHTB

    $default  reduce using rule 2 (S)

    S  go to state 117


state 113

   43 matched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB . KW_ELSE T_LEFTB S T_RIGHTB
   44 unmatched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB .
   45               | KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB . KW_ELSE unmatched_stat

    KW_ELSE  shift, and go to state 118

    $default  reduce using rule 44 (unmatched_stat)


state 114

    6 stat: KW_WHILE T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB .

    $default  reduce using rule 6 (stat)


state 115

   38 for_stat: KW_FOR T_LEFTP type IDENTIFIER ASSIGN exp T_SC . condition T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB

    IDENTIFIER  shift, and go to state 49
    T_TRUE      shift, and go to state 50
    T_FALSE     shift, and go to state 51

    condition    go to state 119
    conjunction  go to state 53
    comparison   go to state 54


state 116

   39 for_stat: KW_FOR T_LEFTP assignment T_SC condition T_SC assignment . T_RIGHTP T_LEFTB S T_RIGHTB

    T_RIGHTP  shift, and go to state 120


state 117

    1 S: S . stat
   31 function_def: type IDENTIFIER T_LEFTP params T_RIGHTP T_LEFTB S . T_RIGHTB

    KW_IF       shift, and go to state 3
    KW_WHILE    shift, and go to state 4
    KW_FOR      shift, and go to state 5
    KW_BREAK    shift, and go to state 6
    KW_RETURN   shift, and go to state 7
    INTEGER     shift, and go to state 8
    KW_INT      shift, and go to state 9
    KW_DOUBLE   shift, and go to state 10
    KW_BOOL     shift, and go to state 11
    KW_STRING   shift, and go to state 12
    T_LEFTP     shift, and go to state 13
    T_RIGHTB    shift, and go to state 121
    IDENTIFIER  shift, and go to state 14
    T_TRUE      shift, and go to state 15
    KW_SKIP     shift, and go to state 16
    KW_READ     shift, and go to state 17
    KW_WRITE    shift, and go to state 18

    stat            go to state 19
    exp             go to state 20
    term            go to state 21
    factor          go to state 22
    declaration     go to state 23
    type            go to state 24
    function_def    go to state 25
    function_call   go to state 26
    for_stat        go to state 27
    if_stat         go to state 28
    matched_stat    go to state 29
    unmatched_stat  go to state 30


state 118

   43 matched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE . T_LEFTB S T_RIGHTB
   45 unmatched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE . unmatched_stat

    KW_IF    shift, and go to state 122
    T_LEFTB  shift, and go to state 123

    unmatched_stat  go to state 124


state 119

   38 for_stat: KW_FOR T_LEFTP type IDENTIFIER ASSIGN exp T_SC condition . T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB
   47 condition: condition . OR conjunction

    OR    shift, and go to state 79
    T_SC  shift, and go to state 125


state 120

   39 for_stat: KW_FOR T_LEFTP assignment T_SC condition T_SC assignment T_RIGHTP . T_LEFTB S T_RIGHTB

    T_LEFTB  shift, and go to state 126


state 121

   31 function_def: type IDENTIFIER T_LEFTP params T_RIGHTP T_LEFTB S T_RIGHTB .

    $default  reduce using rule 31 (function_def)


state 122

   44 unmatched_stat: KW_IF . T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB
   45               | KW_IF . T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE unmatched_stat

    T_LEFTP  shift, and go to state 127


state 123

   43 matched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE T_LEFTB . S T_RIGHTB

    $default  reduce using rule 2 (S)

    S  go to state 128


state 124

   45 unmatched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE unmatched_stat .

    $default  reduce using rule 45 (unmatched_stat)


state 125

   38 for_stat: KW_FOR T_LEFTP type IDENTIFIER ASSIGN exp T_SC condition T_SC . assignment T_RIGHTP T_LEFTB S T_RIGHTB

    IDENTIFIER  shift, and go to state 56

    assignment  go to state 129


state 126

   39 for_stat: KW_FOR T_LEFTP assignment T_SC condition T_SC assignment T_RIGHTP T_LEFTB . S T_RIGHTB

    $default  reduce using rule 2 (S)

    S  go to state 130


state 127

   44 unmatched_stat: KW_IF T_LEFTP . condition T_RIGHTP T_LEFTB S T_RIGHTB
   45               | KW_IF T_LEFTP . condition T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE unmatched_stat

    IDENTIFIER  shift, and go to state 49
    T_TRUE      shift, and go to state 50
    T_FALSE     shift, and go to state 51

    condition    go to state 131
    conjunction  go to state 53
    comparison   go to state 54


state 128

    1 S: S . stat
   43 matched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE T_LEFTB S . T_RIGHTB

    KW_IF       shift, and go to state 3
    KW_WHILE    shift, and go to state 4
    KW_FOR      shift, and go to state 5
    KW_BREAK    shift, and go to state 6
    KW_RETURN   shift, and go to state 7
    INTEGER     shift, and go to state 8
    KW_INT      shift, and go to state 9
    KW_DOUBLE   shift, and go to state 10
    KW_BOOL     shift, and go to state 11
    KW_STRING   shift, and go to state 12
    T_LEFTP     shift, and go to state 13
    T_RIGHTB    shift, and go to state 132
    IDENTIFIER  shift, and go to state 14
    T_TRUE      shift, and go to state 15
    KW_SKIP     shift, and go to state 16
    KW_READ     shift, and go to state 17
    KW_WRITE    shift, and go to state 18

    stat            go to state 19
    exp             go to state 20
    term            go to state 21
    factor          go to state 22
    declaration     go to state 23
    type            go to state 24
    function_def    go to state 25
    function_call   go to state 26
    for_stat        go to state 27
    if_stat         go to state 28
    matched_stat    go to state 29
    unmatched_stat  go to state 30


state 129

   38 for_stat: KW_FOR T_LEFTP type IDENTIFIER ASSIGN exp T_SC condition T_SC assignment . T_RIGHTP T_LEFTB S T_RIGHTB

    T_RIGHTP  shift, and go to state 133


state 130

    1 S: S . stat
   39 for_stat: KW_FOR T_LEFTP assignment T_SC condition T_SC assignment T_RIGHTP T_LEFTB S . T_RIGHTB

    KW_IF       shift, and go to state 3
    KW_WHILE    shift, and go to state 4
    KW_FOR      shift, and go to state 5
    KW_BREAK    shift, and go to state 6
    KW_RETURN   shift, and go to state 7
    INTEGER     shift, and go to state 8
    KW_INT      shift, and go to state 9
    KW_DOUBLE   shift, and go to state 10
    KW_BOOL     shift, and go to state 11
    KW_STRING   shift, and go to state 12
    T_LEFTP     shift, and go to state 13
    T_RIGHTB    shift, and go to state 134
    IDENTIFIER  shift, and go to state 14
    T_TRUE      shift, and go to state 15
    KW_SKIP     shift, and go to state 16
    KW_READ     shift, and go to state 17
    KW_WRITE    shift, and go to state 18

    stat            go to state 19
    exp             go to state 20
    term            go to state 21
    factor          go to state 22
    declaration     go to state 23
    type            go to state 24
    function_def    go to state 25
    function_call   go to state 26
    for_stat        go to state 27
    if_stat         go to state 28
    matched_stat    go to state 29
    unmatched_stat  go to state 30


state 131

   44 unmatched_stat: KW_IF T_LEFTP condition . T_RIGHTP T_LEFTB S T_RIGHTB
   45               | KW_IF T_LEFTP condition . T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE unmatched_stat
   47 condition: condition . OR conjunction

    OR        shift, and go to state 79
    T_RIGHTP  shift, and go to state 135


state 132

   43 matched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE T_LEFTB S T_RIGHTB .

    $default  reduce using rule 43 (matched_stat)


state 133

   38 for_stat: KW_FOR T_LEFTP type IDENTIFIER ASSIGN exp T_SC condition T_SC assignment T_RIGHTP . T_LEFTB S T_RIGHTB

    T_LEFTB  shift, and go to state 136


state 134

   39 for_stat: KW_FOR T_LEFTP assignment T_SC condition T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB .

    $default  reduce using rule 39 (for_stat)


state 135

   44 unmatched_stat: KW_IF T_LEFTP condition T_RIGHTP . T_LEFTB S T_RIGHTB
   45               | KW_IF T_LEFTP condition T_RIGHTP . T_LEFTB S T_RIGHTB KW_ELSE unmatched_stat

    T_LEFTB  shift, and go to state 137


state 136

   38 for_stat: KW_FOR T_LEFTP type IDENTIFIER ASSIGN exp T_SC condition T_SC assignment T_RIGHTP T_LEFTB . S T_RIGHTB

    $default  reduce using rule 2 (S)

    S  go to state 138


state 137

   44 unmatched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB . S T_RIGHTB
   45               | KW_IF T_LEFTP condition T_RIGHTP T_LEFTB . S T_RIGHTB KW_ELSE unmatched_stat

    $default  reduce using rule 2 (S)

    S  go to state 139


state 138

    1 S: S . stat
   38 for_stat: KW_FOR T_LEFTP type IDENTIFIER ASSIGN exp T_SC condition T_SC assignment T_RIGHTP T_LEFTB S . T_RIGHTB

    KW_IF       shift, and go to state 3
    KW_WHILE    shift, and go to state 4
    KW_FOR      shift, and go to state 5
    KW_BREAK    shift, and go to state 6
    KW_RETURN   shift, and go to state 7
    INTEGER     shift, and go to state 8
    KW_INT      shift, and go to state 9
    KW_DOUBLE   shift, and go to state 10
    KW_BOOL     shift, and go to state 11
    KW_STRING   shift, and go to state 12
    T_LEFTP     shift, and go to state 13
    T_RIGHTB    shift, and go to state 140
    IDENTIFIER  shift, and go to state 14
    T_TRUE      shift, and go to state 15
    KW_SKIP     shift, and go to state 16
    KW_READ     shift, and go to state 17
    KW_WRITE    shift, and go to state 18

    stat            go to state 19
    exp             go to state 20
    term            go to state 21
    factor          go to state 22
    declaration     go to state 23
    type            go to state 24
    function_def    go to state 25
    function_call   go to state 26
    for_stat        go to state 27
    if_stat         go to state 28
    matched_stat    go to state 29
    unmatched_stat  go to state 30


state 139

    1 S: S . stat
   44 unmatched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S . T_RIGHTB
   45               | KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S . T_RIGHTB KW_ELSE unmatched_stat

    KW_IF       shift, and go to state 3
    KW_WHILE    shift, and go to state 4
    KW_FOR      shift, and go to state 5
    KW_BREAK    shift, and go to state 6
    KW_RETURN   shift, and go to state 7
    INTEGER     shift, and go to state 8
    KW_INT      shift, and go to state 9
    KW_DOUBLE   shift, and go to state 10
    KW_BOOL     shift, and go to state 11
    KW_STRING   shift, and go to state 12
    T_LEFTP     shift, and go to state 13
    T_RIGHTB    shift, and go to state 141
    IDENTIFIER  shift, and go to state 14
    T_TRUE      shift, and go to state 15
    KW_SKIP     shift, and go to state 16
    KW_READ     shift, and go to state 17
    KW_WRITE    shift, and go to state 18

    stat            go to state 19
    exp             go to state 20
    term            go to state 21
    factor          go to state 22
    declaration     go to state 23
    type            go to state 24
    function_def    go to state 25
    function_call   go to state 26
    for_stat        go to state 27
    if_stat         go to state 28
    matched_stat    go to state 29
    unmatched_stat  go to state 30


state 140

   38 for_stat: KW_FOR T_LEFTP type IDENTIFIER ASSIGN exp T_SC condition T_SC assignment T_RIGHTP T_LEFTB S T_RIGHTB .

    $default  reduce using rule 38 (for_stat)


state 141

   44 unmatched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB .
   45               | KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB . KW_ELSE unmatched_stat

    KW_ELSE  shift, and go to state 142

    $default  reduce using rule 44 (unmatched_stat)


state 142

   45 unmatched_stat: KW_IF T_LEFTP condition T_RIGHTP T_LEFTB S T_RIGHTB KW_ELSE . unmatched_stat

    KW_IF  shift, and go to state 122

    unmatched_stat  go to state 124
